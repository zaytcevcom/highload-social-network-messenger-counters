version: "3.9"
services:

    nginx:
        container_name: hl-messenger-counters-nginx
        build:
            context: docker
            dockerfile: development/nginx/Dockerfile
        ports:
            - "8100:80"
        volumes:
            - .:/app
        depends_on:
            - php-fpm
        networks:
            - hl-network-messenger-counters

    php-fpm:
        container_name: hl-messenger-counters-php-fpm
        build:
            context: docker
            dockerfile: development/php-fpm/Dockerfile
        environment:
            APP_ENV: ${APP_ENV}
            APP_DEBUG: ${APP_DEBUG}
            SENTRY_DSN: ${SENTRY_DSN}
            RABBITMQ_HOST: ${RABBITMQ_HOST}
            RABBITMQ_PORT: ${RABBITMQ_PORT}
            RABBITMQ_USER: ${RABBITMQ_USER}
            RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
            DB_DRIVER: ${DB_DRIVER}
            DB_HOST: ${DB_HOST}
            DB_USER: ${DB_USER}
            DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            DB_NAME: ${DB_NAME}
            DB_CHARSET: ${DB_CHARSET}
            JWT_ENCRYPTION_KEY: /run/secrets/jwt_encryption_key
            JWT_PUBLIC_KEY_PATH: /run/secrets/jwt_public_key
            JWT_PRIVATE_KEY_PATH: /run/secrets/jwt_private_key
        volumes:
            - .:/app
        secrets:
            - jwt_encryption_key
            - jwt_public_key
            - jwt_private_key
        networks:
            - hl-network-messenger-counters

    php-cli:
        container_name: hl-messenger-counters-php-cli
        build:
            context: docker
            dockerfile: development/php-cli/Dockerfile
        environment:
            APP_ENV: ${APP_ENV}
            APP_DEBUG: ${APP_DEBUG}
            SENTRY_DSN: ${SENTRY_DSN}
            RABBITMQ_HOST: ${RABBITMQ_HOST}
            RABBITMQ_PORT: ${RABBITMQ_PORT}
            RABBITMQ_USER: ${RABBITMQ_USER}
            RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
            DB_DRIVER: ${DB_DRIVER}
            DB_HOST: ${DB_HOST}
            DB_USER: ${DB_USER}
            DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            DB_NAME: ${DB_NAME}
            DB_CHARSET: ${DB_CHARSET}
        volumes:
            - .:/app
        networks:
            - hl-network-messenger-counters

    mysql:
        container_name: hl-messenger-counters-mysql
        restart: always
        image: mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_NAME}
        volumes:
            - ./var/mysql:/var/lib/mysql
        networks:
            - hl-network-messenger-counters

    redis:
        container_name: hl-messenger-counters-redis
        image: redis:latest
        restart: always
        entrypoint: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 512mb --maxmemory-policy allkeys-lru
        volumes:
            - ./var/redis:/data
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
        networks:
            - hl-network-messenger-counters

    php-event-counter-increase:
        container_name: hl-messenger-counters-event-counter-increase
        restart: always
        build:
            context: docker
            dockerfile: development/php-cli/Dockerfile
        environment:
            APP_ENV: ${APP_ENV}
            APP_DEBUG: ${APP_DEBUG}
            SENTRY_DSN: ${SENTRY_DSN}
            DB_DRIVER: ${DB_DRIVER}
            DB_HOST: ${DB_HOST}
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: ${DB_NAME}
            DB_CHARSET: ${DB_CHARSET}
            REDIS_HOST: ${REDIS_HOST}
            REDIS_PORT: ${REDIS_PORT}
            REDIS_PASSWORD: ${REDIS_PASSWORD}
        volumes:
            - .:/app
        networks:
            - hl-network-messenger-counters
        depends_on:
            - mysql
            - redis
        command: composer app counters:consumer-increase

    php-event-counter-decrease:
        container_name: hl-messenger-counters-event-counter-decrease
        restart: always
        build:
            context: docker
            dockerfile: development/php-cli/Dockerfile
        environment:
            APP_ENV: ${APP_ENV}
            APP_DEBUG: ${APP_DEBUG}
            SENTRY_DSN: ${SENTRY_DSN}
            DB_DRIVER: ${DB_DRIVER}
            DB_HOST: ${DB_HOST}
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: ${DB_NAME}
            DB_CHARSET: ${DB_CHARSET}
            REDIS_HOST: ${REDIS_HOST}
            REDIS_PORT: ${REDIS_PORT}
            REDIS_PASSWORD: ${REDIS_PASSWORD}
        volumes:
            - .:/app
        networks:
            - hl-network-messenger-counters
        depends_on:
            - mysql
            - redis
        command: composer app counters:consumer-decrease

networks:
    hl-network-messenger-counters:
        driver: bridge

secrets:
    jwt_encryption_key:
        file: ./docker/development/secrets/jwt_encryption_key
    jwt_public_key:
        file: ./docker/development/secrets/jwt_public_key
    jwt_private_key:
        file: ./docker/development/secrets/jwt_private_key
